@page "/radzencourseList"
@using BestCodder.Models
@using BestCodder.Business.Contracts

@inject ICourseRepository _courseRepository

<div class="row mt-4">
    <div class="col-3">
        <h5>Course List</h5>
        <br/>
        <NavLink href="createorupdate" class="btn btn-success">Course Add</NavLink>
    </div>
</div>

<RadzenDataGrid TItem="CourseDto" AllowPaging="true" AllowFiltering="true"
            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" PageSize="2"
            AllowSorting="true" Data="@CourseModelList" ColumnWidth="150px">
    <Columns>
        <RadzenDataGridColumn TItem="CourseDto" Title="Name" Property="Name" ></RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="CourseDto" Title="CoursePrice" Property="CoursePrice"></RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="CourseDto" Title="Description" Property="Description"></RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="CourseDto" Title="Title" Property="Title"></RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>


@code{
    private IEnumerable<CourseDto> CourseModelList { get; set; } = new List<CourseDto>();
    private string? ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var data = await _courseRepository.GetAllCourse();
        if (!data.IsSuccess)
        {
            ErrorMessage = data.Message;
        }
        else
        {
            CourseModelList = data.Data;
        }
    }

}